image: nikkoamiu/phoenix_framework:1.0

variables:
  POSTGRES_DB: my_wedding_test
  POSTGRES_USER: my_wedding_svc
  POSTGRES_PASSWORD: postgres
  MIX_ENV: test

stages:
  - build
  - test
  - release
  - verify
  - push image
  - deploy

compile:
  stage: build
  script:
    - make build
    - make assets
  artifacts:
    untracked: true

# Run Application Tests
test:
  stage: test
  dependencies:
    - compile
  services:
    - postgres:latest
  script:
    - mix test

# Verify a release can be merged into master
can_be_merged:
  stage: test
  script:
    - git checkout master
    - git merge $CI_BUILD_REF
  only:
    - tags
    - develop

# Create the Release Artifacts
artifact_build:
  stage: release
  script: MIX_ENV=prod make release
  artifacts:
    name: $CI_PROJECT_NAME
    paths:
      - rel/$CI_PROJECT_NAME/

# Build and Deploy Docker Image
docker_build:
  stage: push image
  image: docker:latest
  dependencies:
    - artifact_build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF_NAME .
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF_NAME
  tags:
    - shared

# Migrate database on Production
#   TODO: Replace ${} strings in PROD config with actual values
#   for this config to work properly (before re-enabling)
#migrate_prod_db:
#  stage: deploy
#  before_script:
#    - MIX_ENV=prod make build
#  script: MIX_ENV=prod mix ecto.migrate
#  only:
#    - master

# Deploy to Producton on master branch
deploy:
  stage: deploy
  script: deploy/deploy.sh
  environment: production
  when: manual
  only:
    - master
